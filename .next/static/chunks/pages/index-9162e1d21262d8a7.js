(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[405],{8312:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/",function(){return n(2986)}])},2986:function(e,t,n){"use strict";n.r(t),n.d(t,{default:function(){return pages}});var a=n(5893),i=n(7294),components_Logo=()=>(0,a.jsxs)("div",{className:"logo-container",children:[(0,a.jsx)("div",{className:"logo",children:(0,a.jsxs)("svg",{width:"40",height:"40",viewBox:"0 0 40 40",fill:"none",xmlns:"http://www.w3.org/2000/svg",className:"logo-svg",children:[(0,a.jsx)("circle",{cx:"20",cy:"20",r:"19",stroke:"url(#goldGradient)",strokeWidth:"2",fill:"none"}),(0,a.jsxs)("g",{className:"logo-pattern",children:[(0,a.jsx)("path",{d:"M20 8 L24 16 L32 16 L26 22 L28 30 L20 26 L12 30 L14 22 L8 16 L16 16 Z",fill:"url(#goldGradient)",opacity:"0.9"}),(0,a.jsx)("circle",{cx:"20",cy:"20",r:"3",fill:"var(--warm-orange)",opacity:"0.8"}),(0,a.jsx)("circle",{cx:"20",cy:"20",r:"1.5",fill:"var(--primary-gold)"}),(0,a.jsx)("circle",{cx:"8",cy:"8",r:"1.5",fill:"var(--sage-green)",opacity:"0.7"}),(0,a.jsx)("circle",{cx:"32",cy:"8",r:"1.5",fill:"var(--sage-green)",opacity:"0.7"}),(0,a.jsx)("circle",{cx:"8",cy:"32",r:"1.5",fill:"var(--sage-green)",opacity:"0.7"}),(0,a.jsx)("circle",{cx:"32",cy:"32",r:"1.5",fill:"var(--sage-green)",opacity:"0.7"})]}),(0,a.jsx)("defs",{children:(0,a.jsxs)("linearGradient",{id:"goldGradient",x1:"0%",y1:"0%",x2:"100%",y2:"100%",children:[(0,a.jsx)("stop",{offset:"0%",stopColor:"var(--primary-gold)"}),(0,a.jsx)("stop",{offset:"100%",stopColor:"var(--secondary-gold)"})]})})]})}),(0,a.jsx)("span",{className:"logo-text",children:"mycromwell"})]}),components_WalletButton=e=>{let{onConnect:t,onDisconnect:n,onContractDeploy:s}=e,[r,o]=(0,i.useState)(!1),[l,d]=(0,i.useState)(!1),[c,u]=(0,i.useState)(""),[p,y]=(0,i.useState)(""),m=(0,i.useRef)(null),[h,b]=(0,i.useState)(!1),[T,f]=(0,i.useState)(null),[w,g]=(0,i.useState)("");(0,i.useEffect)(()=>(checkConnection(),window.ethereum&&(window.ethereum.on("accountsChanged",handleAccountsChanged),window.ethereum.on("disconnect",handleDisconnect)),()=>{window.ethereum&&(window.ethereum.removeListener("accountsChanged",handleAccountsChanged),window.ethereum.removeListener("disconnect",handleDisconnect)),m.current&&clearTimeout(m.current)}),[]);let clearConnectionTimeout=()=>{m.current&&(clearTimeout(m.current),m.current=null)},startConnectionTimeout=()=>{clearConnectionTimeout(),m.current=setTimeout(()=>{d(!1),alert("Connection timeout. Please try again.")},5e3)},checkConnection=async()=>{if(window.ethereum)try{let e=await window.ethereum.request({method:"eth_accounts"});e.length>0&&(u(e[0]),o(!0),y("metamask"),t&&t(e[0],"metamask"))}catch(e){console.error("Error checking connection:",e)}},handleAccountsChanged=e=>{0===e.length?handleDisconnect():(u(e[0]),t&&t(e[0],p))},handleDisconnect=()=>{o(!1),u(""),y(""),clearConnectionTimeout(),n&&n()},getInjectedWallets=()=>{let e=[];return window.ethereum&&window.ethereum.isMetaMask&&e.push({name:"MetaMask",provider:window.ethereum}),window.ethereum&&window.ethereum.isPhantom&&e.push({name:"Phantom",provider:window.ethereum}),e},handleConnect=async()=>{let e=getInjectedWallets();if(0===e.length){alert("No supported wallet found. Please install MetaMask or Phantom.");return}if(1===e.length){f(e[0].provider),g(e[0].name),await connectWithProvider(e[0].provider,e[0].name);return}b(!0)},connectWithProvider=async(e,n)=>{d(!0),startConnectionTimeout();try{let a=await e.request({method:"eth_requestAccounts"});clearConnectionTimeout(),a.length>0&&(u(a[0]),o(!0),y(n.toLowerCase()),f(e),g(n),t&&t(a[0],n.toLowerCase())),b(!1)}catch(e){clearConnectionTimeout(),4001===e.code?alert("Please connect to "+n+" to use this feature."):(console.error("Error connecting to "+n+":",e),alert("Failed to connect to "+n+". Please try again.")),d(!1),b(!1)}};return r?(0,a.jsxs)("div",{className:"wallet-button-container",children:[(0,a.jsxs)("button",{className:"wallet-button connected",style:{marginRight:"0.5rem"},onClick:void 0,disabled:!0,children:[(0,a.jsx)("div",{className:"wallet-icon",children:(0,a.jsxs)("svg",{width:"20",height:"20",viewBox:"0 0 24 24",fill:"none",xmlns:"http://www.w3.org/2000/svg",children:[(0,a.jsx)("path",{d:"M9 12L11 14L15 10",stroke:"currentColor",strokeWidth:"2",strokeLinecap:"round",strokeLinejoin:"round"}),(0,a.jsx)("path",{d:"M21 12C21 16.9706 16.9706 21 12 21C7.02944 21 3 16.9706 3 12C3 7.02944 7.02944 3 12 3C16.9706 3 21 7.02944 21 12Z",stroke:"currentColor",strokeWidth:"2"})]})}),(0,a.jsx)("span",{className:"wallet-text",children:"".concat(c.slice(0,6),"...").concat(c.slice(-4))})]}),(0,a.jsx)("button",{className:"wallet-button wallet-button-disconnect",onClick:handleDisconnect,children:"Disconnect"})]}):(0,a.jsxs)("div",{className:"wallet-button-container",children:[(0,a.jsxs)("button",{className:"wallet-button ".concat(l?"connecting":""),onClick:handleConnect,disabled:l,children:[(0,a.jsx)("div",{className:"wallet-icon",children:(0,a.jsxs)("svg",{width:"20",height:"20",viewBox:"0 0 24 24",fill:"none",xmlns:"http://www.w3.org/2000/svg",children:[(0,a.jsx)("path",{d:"M21 12V19C21 19.5304 20.7893 20.0391 20.4142 20.4142C20.0391 20.7893 19.5304 21 19 21H5C4.46957 21 3.96086 20.7893 3.58579 20.4142C3.21071 20.0391 3 19.5304 3 19V5C3 4.46957 3.21071 3.96086 3.58579 3.58579C3.96086 3.21071 4.46957 3 5 3H16L21 8V12Z",stroke:"currentColor",strokeWidth:"2",strokeLinecap:"round",strokeLinejoin:"round"}),(0,a.jsx)("path",{d:"M17 21V13H7V21",stroke:"currentColor",strokeWidth:"2",strokeLinecap:"round",strokeLinejoin:"round"}),(0,a.jsx)("path",{d:"M7 3V8H15",stroke:"currentColor",strokeWidth:"2",strokeLinecap:"round",strokeLinejoin:"round"})]})}),(0,a.jsx)("span",{className:"wallet-text",children:l?"Connecting...":"Connect Wallet"})]}),h&&(0,a.jsx)("div",{style:{position:"fixed",top:0,left:0,width:"100vw",height:"100vh",background:"rgba(0,0,0,0.4)",display:"flex",alignItems:"center",justifyContent:"center",zIndex:1e3},children:(0,a.jsxs)("div",{style:{background:"#222",padding:32,borderRadius:16,minWidth:280,boxShadow:"0 4px 24px #0008",color:"#fff"},children:[(0,a.jsx)("h3",{style:{marginBottom:16},children:"Select Wallet"}),getInjectedWallets().map(e=>(0,a.jsx)("button",{style:{display:"block",width:"100%",margin:"8px 0",padding:"12px",borderRadius:8,background:"#333",color:"#fff",border:"1px solid #444",fontSize:16,cursor:"pointer",transition:"background 0.2s"},onClick:()=>connectWithProvider(e.provider,e.name),children:e.name},e.name)),(0,a.jsx)("button",{style:{marginTop:16,background:"none",color:"#aaa",border:"none",cursor:"pointer",fontSize:14},onClick:()=>b(!1),children:"Cancel"})]})})]})},components_Header=e=>{let{onConnect:t,onDisconnect:n,onContractDeploy:i}=e;return(0,a.jsx)("header",{className:"header",children:(0,a.jsxs)("div",{className:"header-content",children:[(0,a.jsx)(components_Logo,{}),(0,a.jsx)("div",{className:"header-controls",children:(0,a.jsx)(components_WalletButton,{onConnect:t,onDisconnect:n,onContractDeploy:i})})]})})},components_TokenSelector=e=>{let{value:t,onChange:n}=e,[s,r]=(0,i.useState)(!1),o=[{symbol:"ETH",name:"Ethereum",icon:"\uD83D\uDD37"},{symbol:"USDC",name:"USD Coin",icon:"\uD83D\uDD35"},{symbol:"USDT",name:"Tether",icon:"\uD83D\uDFE2"},{symbol:"DAI",name:"Dai",icon:"\uD83D\uDFE1"},{symbol:"WBTC",name:"Wrapped Bitcoin",icon:"\uD83D\uDFE0"},{symbol:"LINK",name:"Chainlink",icon:"\uD83D\uDD17"}],l=o.find(e=>e.symbol===t)||o[0],handleTokenSelect=e=>{n(e.symbol),r(!1)};return(0,a.jsxs)("div",{className:"token-selector",children:[(0,a.jsxs)("button",{className:"token-selector-button",onClick:()=>r(!s),type:"button",children:[(0,a.jsxs)("div",{className:"token-info",children:[(0,a.jsx)("span",{className:"token-icon",children:l.icon}),(0,a.jsx)("span",{className:"token-symbol",children:l.symbol})]}),(0,a.jsx)("svg",{className:"token-arrow ".concat(s?"open":""),width:"16",height:"16",viewBox:"0 0 24 24",fill:"none",xmlns:"http://www.w3.org/2000/svg",children:(0,a.jsx)("path",{d:"M6 9L12 15L18 9",stroke:"currentColor",strokeWidth:"2",strokeLinecap:"round",strokeLinejoin:"round"})})]}),s&&(0,a.jsx)("div",{className:"token-dropdown",children:o.map(e=>(0,a.jsxs)("button",{className:"token-option ".concat(e.symbol===t?"selected":""),onClick:()=>handleTokenSelect(e),type:"button",children:[(0,a.jsxs)("div",{className:"token-info",children:[(0,a.jsx)("span",{className:"token-icon",children:e.icon}),(0,a.jsxs)("div",{className:"token-details",children:[(0,a.jsx)("span",{className:"token-symbol",children:e.symbol}),(0,a.jsx)("span",{className:"token-name",children:e.name})]})]}),e.symbol===t&&(0,a.jsx)("svg",{width:"16",height:"16",viewBox:"0 0 24 24",fill:"none",xmlns:"http://www.w3.org/2000/svg",children:(0,a.jsx)("path",{d:"M20 6L9 17L4 12",stroke:"var(--primary-gold)",strokeWidth:"2",strokeLinecap:"round",strokeLinejoin:"round"})})]},e.symbol))})]})},s=n(3603),r=n(7583),o=n(8470),l=JSON.parse('{"Mt":[{"inputs":[{"internalType":"uint256","name":"_minOrderSize","type":"uint256"},{"internalType":"uint256","name":"_maxOrderSize","type":"uint256"},{"internalType":"uint256","name":"_commitmentWindow","type":"uint256"},{"internalType":"uint256","name":"_revealWindow","type":"uint256"},{"internalType":"uint256","name":"_tradingFee","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"trader","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"EmergencyWithdrawExecuted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"trader","type":"address"},{"indexed":false,"internalType":"uint256","name":"requestTime","type":"uint256"},{"indexed":false,"internalType":"string","name":"reason","type":"string"}],"name":"EmergencyWithdrawRequested","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"oldCollector","type":"address"},{"indexed":false,"internalType":"address","name":"newCollector","type":"address"}],"name":"FeeCollectorUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"oldFee","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newFee","type":"uint256"}],"name":"FeeUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"commitment","type":"bytes32"},{"indexed":true,"internalType":"address","name":"trader","type":"address"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"OrderCancelled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"commitment","type":"bytes32"},{"indexed":true,"internalType":"address","name":"trader","type":"address"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"OrderCommitted","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"minSize","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"maxSize","type":"uint256"}],"name":"OrderLimitsUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"commitment1","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"commitment2","type":"bytes32"},{"indexed":false,"internalType":"address","name":"trader1","type":"address"},{"indexed":false,"internalType":"address","name":"trader2","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount1","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount2","type":"uint256"}],"name":"OrderMatched","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"commitment","type":"bytes32"},{"indexed":true,"internalType":"address","name":"trader","type":"address"},{"indexed":false,"internalType":"address","name":"tokenIn","type":"address"},{"indexed":false,"internalType":"address","name":"tokenOut","type":"address"},{"indexed":false,"internalType":"uint256","name":"amountIn","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amountOut","type":"uint256"},{"indexed":false,"internalType":"bool","name":"isBuy","type":"bool"}],"name":"OrderRevealed","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"trader","type":"address"},{"indexed":false,"internalType":"uint256","name":"finalBalance","type":"uint256"}],"name":"StateChannelClosed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"trader","type":"address"},{"indexed":false,"internalType":"uint256","name":"balance","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"nonce","type":"uint256"}],"name":"StateChannelOpened","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"trader","type":"address"},{"indexed":false,"internalType":"uint256","name":"newBalance","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newNonce","type":"uint256"}],"name":"StateChannelUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"trader1","type":"address"},{"indexed":true,"internalType":"address","name":"trader2","type":"address"},{"indexed":false,"internalType":"address","name":"tokenIn","type":"address"},{"indexed":false,"internalType":"address","name":"tokenOut","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount1","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount2","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"TradeExecuted","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"commitmentWindow","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"revealWindow","type":"uint256"}],"name":"WindowsUpdated","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"EMERGENCY_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"EMERGENCY_TIMELOCK","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MAX_COMMITMENT_WINDOW","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MAX_FEE_BPS","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MAX_REVEAL_WINDOW","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MIN_COMMITMENT_WINDOW","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MIN_REVEAL_WINDOW","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"OPERATOR_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"tokenIn","type":"address"},{"internalType":"address","name":"tokenOut","type":"address"},{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"bool","name":"isBuy","type":"bool"},{"internalType":"uint256","name":"secretNonce","type":"uint256"}],"name":"calculateCommitment","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"trader","type":"address"}],"name":"canEmergencyWithdraw","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"commitment","type":"bytes32"}],"name":"cancelOrder","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"trader","type":"address"},{"internalType":"uint256","name":"finalBalance","type":"uint256"},{"internalType":"bytes","name":"signature","type":"bytes"}],"name":"closeStateChannel","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"commitment","type":"bytes32"}],"name":"commitOrder","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"commitmentWindow","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"disableEmergencyMode","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"emergencyMode","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"emergencyModeTime","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"emergencyRequests","outputs":[{"internalType":"address","name":"requester","type":"address"},{"internalType":"uint256","name":"requestTime","type":"uint256"},{"internalType":"bool","name":"isExecuted","type":"bool"},{"internalType":"string","name":"reason","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"emergencyWithdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"enableEmergencyMode","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"trader","type":"address"}],"name":"executeEmergencyWithdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"feeCollector","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"trader","type":"address"}],"name":"getEmergencyRequest","outputs":[{"components":[{"internalType":"address","name":"requester","type":"address"},{"internalType":"uint256","name":"requestTime","type":"uint256"},{"internalType":"bool","name":"isExecuted","type":"bool"},{"internalType":"string","name":"reason","type":"string"}],"internalType":"struct DarkPoolDEX.EmergencyRequest","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"matchId","type":"bytes32"}],"name":"getMatch","outputs":[{"components":[{"internalType":"address","name":"trader1","type":"address"},{"internalType":"address","name":"trader2","type":"address"},{"internalType":"address","name":"tokenIn","type":"address"},{"internalType":"address","name":"tokenOut","type":"address"},{"internalType":"uint256","name":"amount1","type":"uint256"},{"internalType":"uint256","name":"amount2","type":"uint256"},{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"bool","name":"isSettled","type":"bool"},{"internalType":"bool","name":"isDisputed","type":"bool"}],"internalType":"struct DarkPoolDEX.Match","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"commitment","type":"bytes32"}],"name":"getOrder","outputs":[{"components":[{"internalType":"address","name":"trader","type":"address"},{"internalType":"address","name":"tokenIn","type":"address"},{"internalType":"address","name":"tokenOut","type":"address"},{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"bool","name":"isBuy","type":"bool"},{"internalType":"bool","name":"isRevealed","type":"bool"},{"internalType":"bool","name":"isExecuted","type":"bool"},{"internalType":"bool","name":"isCancelled","type":"bool"},{"internalType":"bytes32","name":"commitment","type":"bytes32"}],"internalType":"struct DarkPoolDEX.Order","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"trader","type":"address"}],"name":"getStateChannel","outputs":[{"components":[{"internalType":"address","name":"trader","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"lastUpdate","type":"uint256"},{"internalType":"bool","name":"isActive","type":"bool"},{"internalType":"uint256","name":"emergencyWithdrawTime","type":"uint256"}],"internalType":"struct DarkPoolDEX.StateChannel","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"emergency","type":"address"}],"name":"grantEmergencyRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"grantOperatorRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"matchNonce","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"commitment1","type":"bytes32"},{"internalType":"bytes32","name":"commitment2","type":"bytes32"}],"name":"matchOrders","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"matches","outputs":[{"internalType":"address","name":"trader1","type":"address"},{"internalType":"address","name":"trader2","type":"address"},{"internalType":"address","name":"tokenIn","type":"address"},{"internalType":"address","name":"tokenOut","type":"address"},{"internalType":"uint256","name":"amount1","type":"uint256"},{"internalType":"uint256","name":"amount2","type":"uint256"},{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"bool","name":"isSettled","type":"bool"},{"internalType":"bool","name":"isDisputed","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"maxOrderSize","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"minOrderSize","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"trader","type":"address"},{"internalType":"uint256","name":"initialBalance","type":"uint256"}],"name":"openStateChannel","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"orderNonce","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"orders","outputs":[{"internalType":"address","name":"trader","type":"address"},{"internalType":"address","name":"tokenIn","type":"address"},{"internalType":"address","name":"tokenOut","type":"address"},{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"bool","name":"isBuy","type":"bool"},{"internalType":"bool","name":"isRevealed","type":"bool"},{"internalType":"bool","name":"isExecuted","type":"bool"},{"internalType":"bool","name":"isCancelled","type":"bool"},{"internalType":"bytes32","name":"commitment","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"reason","type":"string"}],"name":"requestEmergencyWithdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"commitment","type":"bytes32"},{"internalType":"address","name":"tokenIn","type":"address"},{"internalType":"address","name":"tokenOut","type":"address"},{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"bool","name":"isBuy","type":"bool"},{"internalType":"uint256","name":"secretNonce","type":"uint256"}],"name":"revealOrder","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"revealWindow","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"emergency","type":"address"}],"name":"revokeEmergencyRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"revokeOperatorRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_feeCollector","type":"address"}],"name":"setFeeCollector","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_minOrderSize","type":"uint256"},{"internalType":"uint256","name":"_maxOrderSize","type":"uint256"}],"name":"setOrderLimits","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_tradingFee","type":"uint256"}],"name":"setTradingFee","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_commitmentWindow","type":"uint256"},{"internalType":"uint256","name":"_revealWindow","type":"uint256"}],"name":"setWindows","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"matchId","type":"bytes32"},{"internalType":"bytes","name":"signature1","type":"bytes"},{"internalType":"bytes","name":"signature2","type":"bytes"}],"name":"settleMatch","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"stateChannels","outputs":[{"internalType":"address","name":"trader","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"lastUpdate","type":"uint256"},{"internalType":"bool","name":"isActive","type":"bool"},{"internalType":"uint256","name":"emergencyWithdrawTime","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"tradingFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"unpause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"trader","type":"address"},{"internalType":"uint256","name":"newBalance","type":"uint256"},{"internalType":"uint256","name":"newNonce","type":"uint256"},{"internalType":"bytes","name":"signature","type":"bytes"}],"name":"updateStateChannel","outputs":[],"stateMutability":"nonpayable","type":"function"},{"stateMutability":"payable","type":"receive"}]}');let d=new class{async connect(){try{if(void 0===window.ethereum)throw Error("MetaMask not installed");return this.provider=new s.Q(window.ethereum),this.signer=await this.provider.getSigner(),await window.ethereum.request({method:"eth_requestAccounts"}),!0}catch(e){return console.error("Failed to connect to Web3:",e),!1}}async connectToContract(e){try{if(!this.provider||!this.signer)return console.error("Provider or signer not available"),!1;console.log("\uD83D\uDD17 Connecting to contract at:",e),console.log("\uD83D\uDCCB Using ABI with",l.Mt.length,"functions"),this.contract=new r.CH(e,l.Mt,this.signer),this.contractAddress=e;try{console.log("\uD83D\uDD0D Testing contract connection..."),console.log("\uD83D\uDD0D Contract address:",e),console.log("\uD83D\uDD0D Provider:",this.provider),console.log("\uD83D\uDD0D Signer:",this.signer);let t=await this.provider.getCode(e);console.log("\uD83D\uDD0D Contract code length:",t.length);let n=await this.provider.getNetwork();if(console.log("\uD83D\uDD0D Connected to network:",{chainId:n.chainId.toString(),name:n.name,fullNetwork:n}),1337!==Number(n.chainId))throw Error("Wrong network! Expected chainId 1337 (localhost), got: ".concat(n.chainId));if("0x"===t)return console.error("❌ No contract found at address:",e),!1;let a=await this.contract.getCurrentFee();if(console.log("✅ Contract connected successfully, tradingFee:",a.toString()),"function"!=typeof this.contract.calculateCommitment)return console.error("❌ calculateCommitment function not found in contract"),!1;return console.log("✅ calculateCommitment function is available"),!0}catch(e){return console.error("❌ Contract connection test failed:",e),console.error("❌ Error details:",{message:e instanceof Error?e.message:"Unknown error",code:null==e?void 0:e.code,data:null==e?void 0:e.data}),!1}}catch(e){return console.error("❌ Failed to connect to contract:",e),!1}}async getAccount(){return this.signer?await this.signer.getAddress():null}async getBalance(){if(!this.signer)return"0";let e=await this.signer.getAddress(),t=await this.provider.getBalance(e);return o.dF(t)}async commitOrder(e,t,n,a,i){if(!this.contract)throw Error("Contract not connected");try{console.log("\uD83D\uDD0D Committing order with params:",{tokenIn:e,tokenOut:t,amountIn:n,amountOut:a,isBuy:i});let s=Math.floor(1e6*Math.random());console.log("\uD83E\uDDEE Calculating commitment on-chain...");let r=await this.calculateCommitment(e,t,n,a,i,s);console.log("\uD83D\uDCDD Committing order to blockchain...");let o=await this.contract.commitOrder(r);return console.log("⏳ Waiting for transaction confirmation..."),await o.wait(),localStorage.setItem("nonce_".concat(r),s.toString()),localStorage.setItem("order_".concat(r),JSON.stringify({tokenIn:e,tokenOut:t,amountIn:n,amountOut:a,isBuy:i})),console.log("✅ Order committed successfully:",r),r}catch(e){throw console.error("❌ Failed to commit order:",e),e}}async revealOrder(e){if(!this.contract)throw Error("Contract not connected");let t=localStorage.getItem("nonce_".concat(e)),n=localStorage.getItem("order_".concat(e));if(!t||!n)throw Error("Order data not found");let a=JSON.parse(n),i=await this.contract.revealOrder(e,a.tokenIn,a.tokenOut,o.fi(a.amountIn),o.fi(a.amountOut),a.isBuy,parseInt(t));await i.wait()}async getOrder(e){if(!this.contract)throw Error("Contract not connected");try{let t=await this.contract.getOrder(e);return{trader:t.trader,tokenIn:t.tokenIn,tokenOut:t.tokenOut,amountIn:o.dF(t.amountIn),amountOut:o.dF(t.amountOut),isBuy:t.isBuy,isRevealed:t.isRevealed,isExecuted:t.isExecuted,timestamp:t.timestamp.toNumber()}}catch(e){return console.error("Failed to get order:",e),null}}async openStateChannel(e){if(!this.contract)throw Error("Contract not connected");let t=await this.contract.openStateChannel(await this.signer.getAddress(),o.fi(e),{value:o.fi(e)});await t.wait()}async getStateChannel(e){if(!this.contract)throw Error("Contract not connected");try{let t=await this.contract.getStateChannel(e);return{trader:t.trader,balance:o.dF(t.balance),isActive:t.isActive,nonce:t.nonce.toNumber()}}catch(e){return console.error("Failed to get state channel:",e),null}}async getContractInfo(){if(!this.contract)throw Error("Contract not connected");return{minOrderSize:o.dF(await this.contract.minOrderSize()),maxOrderSize:o.dF(await this.contract.maxOrderSize()),commitmentWindow:(await this.contract.commitmentWindow()).toString(),revealWindow:(await this.contract.revealWindow()).toString(),tradingFee:(await this.contract.getCurrentFee()).toString(),paused:await this.contract.paused()}}isContractConnected(){return null!==this.contract}onOrderCommitted(e){if(!this.contract)throw Error("Contract not connected");this.contract.on("OrderCommitted",e)}onOrderRevealed(e){if(!this.contract)throw Error("Contract not connected");this.contract.on("OrderRevealed",e)}onOrderMatched(e){if(!this.contract)throw Error("Contract not connected");this.contract.on("OrderMatched",e)}async calculateCommitment(e,t,n,a,i,s){if(!this.contract)throw Error("Contract not connected");return await this.contract.calculateCommitment(e,t,o.fi(n),o.fi(a),i,s)}disconnect(){this.contract&&this.contract.removeAllListeners(),this.provider=null,this.signer=null,this.contract=null,this.contractAddress=null}constructor(){this.provider=null,this.signer=null,this.contract=null,this.contractAddress=null,this.MIN_ORDER_SIZE=o.fi("0.001"),this.MAX_ORDER_SIZE=o.fi("100"),this.COMMITMENT_WINDOW=300,this.REVEAL_WINDOW=600,this.TRADING_FEE=50}};async function fetchTokenPrices(){var e,t,n,a;let i={ETH:"ethereum",USDC:"usd-coin",USDT:"tether",DAI:"dai"},s=await fetch("https://api.coingecko.com/api/v3/simple/price?ids=ethereum,usd-coin,tether,dai&vs_currencies=usd"),r=await s.json();return{ETH:(null===(e=r[i.ETH])||void 0===e?void 0:e.usd)||0,USDC:(null===(t=r[i.USDC])||void 0===t?void 0:t.usd)||0,USDT:(null===(n=r[i.USDT])||void 0===n?void 0:n.usd)||0,DAI:(null===(a=r[i.DAI])||void 0===a?void 0:a.usd)||0}}var components_SwapInterface=e=>{let{connectedAccount:t,walletProvider:n,contractAddress:s}=e,[r,o]=(0,i.useState)("ETH"),[l,c]=(0,i.useState)("USDC"),[u,p]=(0,i.useState)(""),[y,m]=(0,i.useState)(""),[h,b]=(0,i.useState)(!1),[T,f]=(0,i.useState)(""),[w,g]=(0,i.useState)([]),[x,v]=(0,i.useState)(null),[C,D]=(0,i.useState)({ETH:0,QNT:0,RENDER:0,USDC:0}),[k,M]=(0,i.useState)(!1),E={ETH:"0x0000000000000000000000000000000000000000",QNT:"0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0",RENDER:"0xCf7Ed3AccA5a467e9e704C703E8D87F634fB0Fc9",USDC:"0xA51c1fc2f0D1a1b8494Ed1FE312d7C3a78Ed91C0"};(0,i.useEffect)(()=>{fetchPrices()},[r,l]),(0,i.useEffect)(()=>{if(u&&C[r]&&C[l]){let e=parseFloat(u);if(!isNaN(e)){let t=e*C[r],n=t/C[l];m(n?n.toFixed(6):"")}}else m("")},[u,r,l,C]),(0,i.useEffect)(()=>{let initializeContract=async()=>{if(t&&s)try{f("Connecting to contract...");let e=await d.connect();if(e){let e=await d.connectToContract(s);if(e){let e=await d.getContractInfo();v(e),M(!0),setupEventListeners(),f("Contract connected successfully")}else f("Failed to connect to contract")}else f("Failed to connect wallet")}catch(e){f("Failed to connect to contract")}};initializeContract()},[t,s]);let fetchPrices=async()=>{try{let e=await fetchTokenPrices();D(e)}catch(e){f("Failed to fetch prices.")}},setupEventListeners=()=>{try{d.onOrderCommitted((e,t,n)=>{g(t=>[...t,e]),f("Order committed! Commitment: ".concat(e.slice(0,10),"..."))}),d.onOrderRevealed((e,t,n,a,i,s,r)=>{f("Order revealed! Ready for matching.")}),d.onOrderMatched((e,t,n,a,i,s)=>{f("Order matched! Trade executed successfully.")})}catch(e){f("Error setting up event listeners.")}},handleSwap=async()=>{if(!t){f("Please connect your wallet");return}if(!s){f("Contract address not found");return}if(!k){f("Contract not connected - trying to reconnect...");try{let e=await d.connect();if(e){let e=await d.connectToContract(s);e&&(M(!0),f("Contract reconnected - please try again"))}}catch(e){f("Failed to reconnect to contract")}return}if(!u){f("Please enter an amount to swap");return}if(r===l){f("Cannot swap the same token");return}b(!0),f("Committing order...");try{let e=await d.commitOrder(E[r],E[l],u,y,!0);f("Order committed! Commitment: ".concat(e.slice(0,10),"...")),p(""),m("")}catch(e){f("Error: ".concat(e instanceof Error?e.message:"Unknown error"))}finally{b(!1)}},handleRevealOrder=async e=>{b(!0),f("Revealing order...");try{await d.revealOrder(e),f("Order revealed successfully!"),g(t=>t.filter(t=>t!==e))}catch(e){f("Error revealing order: ".concat(e instanceof Error?e.message:"Unknown error"))}finally{b(!1)}};return(0,a.jsx)("div",{className:"swap-interface",children:(0,a.jsxs)("div",{className:"swap-card",children:[(0,a.jsxs)("div",{className:"swap-header",children:[(0,a.jsx)("h2",{children:"Dark Pool Swap"}),(0,a.jsx)("p",{className:"swap-subtitle",children:"Private, Decentralized Swaps"}),t&&(0,a.jsxs)("div",{className:"connection-status",children:[(0,a.jsx)("span",{className:"status-indicator connected"}),(0,a.jsxs)("span",{className:"status-text",children:["Connected via ",n," (",t.slice(0,6),"...",t.slice(-4),")"]})]}),x&&(0,a.jsx)("div",{className:"contract-info",children:(0,a.jsxs)("small",{children:["Fee: ",parseInt(x.tradingFee)/100,"% | Min: ",parseFloat(x.minOrderSize)," | Max: ",parseFloat(x.maxOrderSize)]})})]}),(0,a.jsxs)("div",{className:"swap-form",children:[(0,a.jsxs)("div",{className:"token-input",children:[(0,a.jsxs)("div",{className:"input-header",children:[(0,a.jsx)("span",{children:"From"}),(0,a.jsx)("span",{className:"balance",children:"Balance: 0.00"})]}),(0,a.jsxs)("div",{className:"input-container",children:[(0,a.jsx)("input",{type:"number",placeholder:"0.0",value:u,onChange:e=>p(e.target.value),className:"amount-input"}),(0,a.jsx)(components_TokenSelector,{value:r,onChange:o})]})]}),(0,a.jsx)("div",{className:"swap-arrow",children:(0,a.jsx)("svg",{viewBox:"0 0 24 24",fill:"none",xmlns:"http://www.w3.org/2000/svg",children:(0,a.jsx)("path",{d:"M7 10L12 15L17 10",stroke:"currentColor",strokeWidth:"2",strokeLinecap:"round",strokeLinejoin:"round"})})}),(0,a.jsxs)("div",{className:"token-input",children:[(0,a.jsxs)("div",{className:"input-header",children:[(0,a.jsx)("span",{children:"To"}),(0,a.jsx)("span",{className:"balance",children:"Balance: 0.00"})]}),(0,a.jsxs)("div",{className:"input-container",children:[(0,a.jsx)("input",{type:"number",placeholder:"0.0",value:y,readOnly:!0,className:"amount-input"}),(0,a.jsx)(components_TokenSelector,{value:l,onChange:c})]})]}),T&&(0,a.jsx)("div",{className:"order-status",children:(0,a.jsx)("p",{children:T})}),(0,a.jsx)("button",{className:"swap-button ".concat(!t||h?"disabled":""),onClick:handleSwap,disabled:!t||h,children:h?"Processing...":t?"Commit Order":"Connect Wallet to Swap"})]}),w.length>0&&(0,a.jsxs)("div",{className:"pending-orders",children:[(0,a.jsx)("h3",{children:"Pending Orders"}),w.map((e,t)=>(0,a.jsxs)("div",{className:"pending-order",children:[(0,a.jsxs)("span",{className:"commitment",children:[e.slice(0,10),"...",e.slice(-8)]}),(0,a.jsx)("button",{className:"reveal-button",onClick:()=>handleRevealOrder(e),disabled:h,children:"Reveal"})]},t))]})]})})},pages=function(){let[e,t]=(0,i.useState)(""),[n,s]=(0,i.useState)(""),[r,o]=(0,i.useState)(""),[l,d]=(0,i.useState)(!0);return((0,i.useEffect)(()=>{let loadDeploymentInfo=async()=>{try{let e=await fetch("/deployment.json");if(e.ok){let t=await e.json(),n=t.contracts.DarkPoolDEX.address;o(n)}else o("0x610178dA211FEF7D417bC0e6FeD39F05609AD788")}catch(e){o("0x610178dA211FEF7D417bC0e6FeD39F05609AD788")}finally{d(!1)}};loadDeploymentInfo()},[]),l)?(0,a.jsx)("div",{className:"App",children:"Loading..."}):(0,a.jsxs)("div",{className:"App",children:[(0,a.jsx)(components_Header,{onConnect:(e,n)=>{t(e),s(n)},onDisconnect:()=>{t(""),s("")},onContractDeploy:e=>{o(e)}}),(0,a.jsx)("main",{className:"main-content",children:(0,a.jsx)(components_SwapInterface,{connectedAccount:e,walletProvider:n,contractAddress:r})})]})}}},function(e){e.O(0,[58,774,888,179],function(){return e(e.s=8312)}),_N_E=e.O()}]);